Tomcat在启动的时候会触发容器的初始化事件，spring的contextloadlistener 会监听到这个事件，它的contextInitialized方法会被调用，
在这个方法中，Spring会初始化全局的Spring根容器，这个就是Spring的IoC容器，IoC容器初始化完毕后，Spring将其存储到ServletContext中，便于以后来获取。
Tomcat&Jetty在启动过程中还会扫描Servlet，一个Web应用中的Servlet可以有多个，以SpringMVC中的DispatcherServlet为例，
这个Servlet实际上是一个标准的前端控制器，用以转发、匹配、处理每个Servlet请求。

Servlet一般会延迟加载，当第一个请求达到时，Tomcat&Jetty发现DispatcherServlet还没有被实例化，就调用DispatcherServlet的init方法，
DispatcherServlet在初始化的时候会建立自己的容器，叫做SpringMVC 容器，用来持有Spring MVC相关的Bean。
同时，Spring MVC还会通过ServletContext拿到Spring根容器，并将Spring根容器设为SpringMVC容器的父容器，
请注意，Spring MVC容器可以访问父容器中的Bean，但是父容器不能访问子容器的Bean， 也就是说Spring根容器不能访问SpringMVC容器里的Bean。
说的通俗点就是，在Controller里可以访问Service对象，但是在Service里不可以访问Controller对象。

HTTP服务器不能和业务耦合，所以有了servlet接口，业务类都需要实现servlet
请求来了后，具体是哪个servlet来处理呢，于是有了servlet容器。会将请求转发到具体的 Servlet
而 Servlet 接口和 Servlet 容器这一整套叫做servlet规范。Tomcat按照规范要求实现了servlet容器，同时也具有HTTP服务器的功能。

servlet容器的工作流程：
当客户请求某个资源时，HTTP服务器会用servletrequest对象把请求封装起来，然后调用servlet容器的service方法，
servlet容器会根据请求的URL和servlet的映射关系，
并调用servlet的init进行初始化，然后调用servlet的service方法。把servletresponse对象返回给HTTP服务器，，HTTP服务器再把响应发送给客户端。

servlet是怎么注册到servlet容器中的？
web应用根据servlet规范都有固定的目录结构，servlet容器通过读取配置文件，读取servlet。

servletcontext是怎么回事
servlet规范用servletcontext对应一个web应用，应用部署好后，servlet容器启动的时候，会加载web应用，并为每个应用创建全局唯一的servletcontext。
servletcontext持有所有的servlet实例，可以用它实现请求的转发。

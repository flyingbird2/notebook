1、开闭原则
为了扩展系统的功能，不能修改已有的类，但是可以定义新的类

2、观察者模式
组件的init()和start()是由它的父组件的状态变化触发的，上层组件的初始化会触发子组件的初始化，上层组件的启动会触发子组件的启动，
因此把组件的生命周期定义为一个个状态，把状态的转变看做一个事件。
而事件是有监听器的，在监听器里可以实现一些逻辑，并且监听器可以很方便的添加和删除
这就是典型的观察者模式

3、模板设计模式
基类LifyCycleBase实现了接口LifyCycle中的所有方法，并把一些公共的逻辑放到基类中，并定义了一些抽象方法，
让具体的子类去实现，
这就是典型的模板设计模式

